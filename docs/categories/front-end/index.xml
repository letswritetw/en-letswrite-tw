<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Front-End on Let&#39;s Write, EN</title>
    <link>https://en.letswrite.tw/categories/front-end/</link>
    <description>Recent content in Front-End on Let&#39;s Write, EN</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Let&#39;s Write. All Rights Reserved.</copyright>
    <lastBuildDate>Sun, 05 Oct 2025 08:18:00 +0800</lastBuildDate>
    <atom:link href="https://en.letswrite.tw/categories/front-end/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Automatically Compress Images to a Target Size Using Compressor.js</title>
      <link>https://en.letswrite.tw/compressjs/</link>
      <pubDate>Sun, 05 Oct 2025 08:18:00 +0800</pubDate>
      <guid>https://en.letswrite.tw/compressjs/</guid>
      <description>This tutorial demonstrates how to use the JavaScript library Compressor.js to automatically compress images to a specific file size (e.g., under 600KB), convert them to the modern WebP format, and enforce maximum width/height constraints. The approach uses recursive quality reduction to maintain the best image quality while ensuring the file size meets the requirement.</description>
    </item>
    <item>
      <title>Detecting localStorage Changes on the Same Page</title>
      <link>https://en.letswrite.tw/localstorage-event/</link>
      <pubDate>Tue, 20 May 2025 08:18:00 +0800</pubDate>
      <guid>https://en.letswrite.tw/localstorage-event/</guid>
      <description>Learn how to track changes to localStorage within the same tab using CustomEvent and method overrides.</description>
    </item>
    <item>
      <title>Simple Webpage Screenshot Functionality - DOM to Image</title>
      <link>https://en.letswrite.tw/dom-to-image/</link>
      <pubDate>Sat, 25 Feb 2023 08:18:00 +0800</pubDate>
      <guid>https://en.letswrite.tw/dom-to-image/</guid>
      <description>This article explores the DOM to Image package, which can be used by frontend developers to capture webpage screenshots. It provides a step-by-step guide to using the package, including tips on configuring the parameters for the captured image. Additionally, the author shares an Easter egg about generative AI.</description>
    </item>
    <item>
      <title>Progressive Image Loading like Medium</title>
      <link>https://en.letswrite.tw/medium-lazyload/</link>
      <pubDate>Mon, 07 Oct 2019 08:18:00 +0800</pubDate>
      <guid>https://en.letswrite.tw/medium-lazyload/</guid>
      <description>Outline of this article: Three ways to progressive images loading, Three steps of Medium Progressive Images Loading, Code Part, Test page loading time</description>
    </item>
  </channel>
</rss>
